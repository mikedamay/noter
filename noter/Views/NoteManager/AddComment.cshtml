@model IEnumerable<noter.Entities.Comment>

@functions
{

    // provide names like "Comment.Payload" rather than simply "Payload"
    // so that the binder will see something with the right shape
    string GetFullPropertyyName(int index, string propertyName)
    {
        return $"{ViewBag.CommentListName}[{index}].{propertyName}";
    }
}
<div class="col-md-12">
    <div>
        <h4>Comments</h4>
    </div>
    <div>
        @{
            int ii = 0;
            foreach (noter.Entities.Comment comment in Model)
            {
                <div class="row" display:flex; align-items: center">
                    <input type="hidden" name="@GetFullPropertyyName(ii, nameof(comment.Id))" value="@comment.Id" aria-hidden="True"/>
                    <div class="form-group col-md-11">
@*                        <label asp-for="@comment.Payload" class="control-label"></label>*@
                        <textarea asp-for="@comment.Payload" class="form-control" name="@GetFullPropertyyName(ii, nameof(comment.Payload))"></textarea>
                    </div>
                    <div class="form-group col-md-1 vertical-align">
                        <button class="btn btn-sm" type="submit" formaction="?commentId=@comment.Id"
                                formmethod="post" name="submit" value="@ViewBag.DeleteAction" aria-label="Delete comment">
                            <span class="glyphicon glyphicon-trash" aria-hidden="true"></span>
                        </button>
                        <span asp-validation-for="@comment.Payload" class="text-danger"></span>
                    </div>
                </div>
                ii++;
            }
        }
        <div class="form-group">
            <input type="submit" name="submit" asp-controller="NoteManager" 
                   asp-action="Edit" class="btn btn-default btn-primary" value="@ViewBag.AddCommentAction"/>
        </div>
        <a id="endofcomments"></a>
    </div>
</div>


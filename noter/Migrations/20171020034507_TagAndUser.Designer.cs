// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using noter.Data;
using System;

namespace noter.Migrations
{
    [DbContext(typeof(NoteDbContext))]
    [Migration("20171020034507_TagAndUser")]
    partial class TagAndUser
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("noter.Entities.Note", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Payload");

                    b.Property<long?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Note");
                });

            modelBuilder.Entity("noter.Entities.Tag", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Details");

                    b.Property<string>("Name")
                        .HasMaxLength(20);

                    b.Property<long?>("NoteId");

                    b.Property<string>("ShortDescription")
                        .HasMaxLength(80);

                    b.HasKey("Id");

                    b.HasIndex("NoteId");

                    b.ToTable("Tag");
                });

            modelBuilder.Entity("noter.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("noter.Entities.Note", b =>
                {
                    b.HasOne("noter.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("noter.Entities.Tag", b =>
                {
                    b.HasOne("noter.Entities.Note")
                        .WithMany("Tags")
                        .HasForeignKey("NoteId");
                });
#pragma warning restore 612, 618
        }
    }
}
